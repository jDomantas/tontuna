fn main() {
    generate_docs();
}

# Prints out markdown containing a list of every globally defined function,
# including comments above the function if there are any.
fn generate_docs() {
    let source = program_source();
    let previous_comment = nil;
    println("---");
    for item in source {
        if let code: Code = item {
            let name = get_def_name(code);
            if name != nil {
                println();
                println("Function ", name);
                if previous_comment != nil {
                    println();
                    println(previous_comment.text);
                }
                println();
                println("---");
            }
            previous_comment = nil;
        } else if let comment: Comment = item {
            previous_comment = comment;
        } else {
            panic("expected code or comment");
        }
    }
}

# Returns function name if given code is a function definition,
# or nil otherwise.
fn get_def_name(code) {
    let text = code.text;
    # println("code text: ", text);
    if starts_with(text, "fn") {
        let rest = text.substring(2, text.len - 2);
        return rest.substring(0, 10);
    } else {
        return nil;
    }
}

fn starts_with(haystack, needle) {
    if haystack.len < needle.len {
        return false;
    }
    let start = haystack.substring(0, needle.len);
    return start == needle;
}

main();
